<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oauth on TOM&#39;s zone</title>
    <link>https://hasaki.xyz/tags/oauth/</link>
    <description>Recent content in Oauth on TOM&#39;s zone</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ZH-CN</language>
    <copyright>Early 2016 ~ 2020 &amp;copy; TOM&#39;s Zone</copyright>
    <lastBuildDate>Tue, 02 Jan 2018 11:31:25 +0800</lastBuildDate>
    
	<atom:link href="https://hasaki.xyz/tags/oauth/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>从jwt到OAuth</title>
      <link>https://hasaki.xyz/blog/2018-01-02-%E4%BB%8Ejwt%E5%88%B0oauth/</link>
      <pubDate>Tue, 02 Jan 2018 11:31:25 +0800</pubDate>
      
      <guid>https://hasaki.xyz/blog/2018-01-02-%E4%BB%8Ejwt%E5%88%B0oauth/</guid>
      <description>JWT JWT 是 JSON Web Token 的缩写，可以简单理解为生产者颁发给消费者一个令牌。参照 JWT 规范 对其所做的描述是：
 JSON Web 令牌（JWT）是一种紧凑的、URL 安全的方式，用来表示要在双方之间传递的“声明”。JWT 中的声明被编码为 JSON 对象，用作 JSON Web 签名（JWS）结构的有效内容或 JSON Web 加密（JWE）结构的明文，使得声明能够被：数字签名、或利用消息认证码（MAC）保护完整性、加密。
 这个规范允许我们使用 JWT 在用户和服务器之间传递安全可靠的信息。
JWT 的构成 JWT 由三部分构成：
 Header ：头部，即 JOSE Header Claims ：声明，即 JWT Payload Signature ：签名，即 JWT Signature  JWT 由这三部分组成，每一部分都是使用 base64url 编码的，并使用句点（.）连接起来
 这里使用base64url编码而不是普通的 base64，是因为 base64 编码会产生+和/，这两个字符在 URL 中是有特殊意义的，会导致 JWT 不是 URL 安全的。
 头部(JOSE Header) JSOE 是 JSON Object Signing and Encryption，即JSON对象签名与加密的缩写。</description>
    </item>
    
  </channel>
</rss>